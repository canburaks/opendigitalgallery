import { FEATURED_PRODUCT_REFETCH_COUNT, queryKeys, revalidateDuration } from '@/constants';
import { getCollections, getInfiniteFeaturedPosters } from '@/data/hooks';
import { getProductOptions } from '@/data/hooks/useProductOptions';
import { HomeView } from '@/views';
import { QueryClient, dehydrate } from '@tanstack/react-query';
import Head from 'next/head';

export default function Home() {
  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>
        <HomeView />
      </main>
    </>
  );
}

export const getStaticProps = async () => {
  const queryClient = new QueryClient();

  // Populate Cache : Featured List
  await queryClient.prefetchInfiniteQuery([queryKeys.featuredPosters], () =>
    getInfiniteFeaturedPosters({ from: 0, to: FEATURED_PRODUCT_REFETCH_COUNT - 1 })
  );

  // Populate Cache : Categories
  await queryClient.prefetchQuery([queryKeys.collections], () => getCollections());

  // Populate Cache : Product Options For Chart
  await queryClient.prefetchQuery([queryKeys.productOptions], () => getProductOptions());

  return {
    props: {
      dehydratedState: JSON.parse(JSON.stringify(dehydrate(queryClient))),
      revalidate: revalidateDuration,
    },
  };
};
